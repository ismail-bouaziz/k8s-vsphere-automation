---
- name: Installation of the requirement in ALL NODES.
  hosts: nodes
  gather_facts: no
  become: true
  vars:
   CRI_O_VERSION : "1.23"
  tasks:
#####-----------Disable Swapp----------######################################
    - name: Disable Swapp.
      shell: |
        swapoff -a
    - name : Check disable SWAP in fstab.
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'
#####-----------Disable SELinux----------######################################
    - name: Disable SELinux.
      shell : sudo setenforce 0
    - name: Set SELinux in permissive mode (effectively disabling it).
      command: sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
    - name: apply sysctl params without reboot
      shell: sysctl --system
#####-----------Add hosts----------######################################
    - name: Add hosts to hosts file.
      blockinfile:
        path: /etc/hosts
        state: present
        block: |
          10.112.100.60 master
          10.112.100.61 worker1
          10.112.100.62 worker2
#------------------Install Required Packages-----------------------------------#
    - name: Install Required Packages.
      yum:
        name:
          - git
          - wget
          - curl
          - ca-certificates
          - iptables
          - iproute-tc
#------------------Allow firewall rules-----------------------------------#
    - name: enable 6443/tcp
      firewalld:
        zone: public
        port: 6443/tcp
        permanent: true
        state: enabled
    - name: enable 2379-2380/tcp
      firewalld:
        zone: public
        port: 2379-2380/tcp
        permanent: true
        state: enabled
    - name: enable 10250-10252/tcp
      firewalld:
        zone: public
        port: 10250-10252/tcp
        permanent: true
        state: enabled
    - name: enable 30000-32767/tcp
      firewalld:
        zone: public
        port: 30000-32767/tcp
        permanent: true
        state: enabled
    - name: Reload firewall
      ansible.builtin.command: firewall-cmd --reload
#------------------Install kernel modules-----------------------------------#
    - name: add modprob modules.
      blockinfile:
        path: /etc/modules-load.d/k8s.conf
        create: yes
        block: |
          overlay
          br_netfilter
    - name: load modprobe overlay.
      community.general.modprobe:
        name: overlay
        state: present
    - name: load modprobe br_netfilter.
      community.general.modprobe:
        name: br_netfilter
        state: present
    - name: Writing in the created file.
      blockinfile:
        path: /etc/sysctl.d/k8s.conf
        create: yes
        block: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1
    - name: Reload Configs without reboot.
      shell: sudo sysctl --system
#-------------------------- Install and configure cri-o--------------##
    - name: Download devel:kubic:libcontainers:stable.repo
      ansible.builtin.get_url:
        url: "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_8/devel:kubic:libcontainers:stable.repo"
        dest: "/etc/yum.repos.d/devel:kubic:libcontainers:stable.repo"
    - name: Download devel:kubic:libcontainers:stable:cri-o:CRI_O_VERSION .repo
      ansible.builtin.get_url:
        url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ CRI_O_VERSION  }}/CentOS_8/devel:kubic:libcontainers:stable:cri-o:{{ CRI_O_VERSION  }}.repo"
        dest: "/etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:{{ CRI_O_VERSION  }}.repo"
    - name: install cri-o.
      dnf:
        name: cri-o
        state: present
    - name: Enable crio
      service:
        name: crio
        enabled: yes
        state: started
    - name: Add repo.
      blockinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        create: yes
        block: |
          [kubernetes] 
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    - name: Install Kubeadm Kubelet Kubectl All Nodes.
      yum:
        name:
          - kubectl-1.23.6
          - kubeadm-1.23.6
          - kubelet-1.23.6
    - name: Enable kubelet
      service:
        name: kubelet
        enabled: yes
        state: started